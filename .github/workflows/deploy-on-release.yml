name: Deploy on Dependent Repository Release

on:
  repository_dispatch:
    types: [release-trigger]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install dependencies
        run: |
          npm install
          bundle install

      - name: Log trigger information
        run: |
          echo "Triggered by repository: ${{ github.event.client_payload.repository }}"
          echo "Release tag: ${{ github.event.client_payload.tag }}"
          echo "Release URL: ${{ github.event.client_payload.release_url }}"

      - name: Update dependencies and build
        run: |
          # Update the specific dependency that was released
          echo "Updating dependency from ${{ github.event.client_payload.repository }}"
          
          # Add your dependency update logic here
          # This might involve updating package.json, Gemfile, or manifest files
          
          # Example for npm packages:
          # npm update @adobe/${{ github.event.client_payload.package_name }}
          
          # Example for git submodules:
          # git submodule update --remote path/to/${{ github.event.client_payload.repository }}

      - name: Build Jekyll site
        run: |
          bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful for ${{ github.event.client_payload.repository }} release ${{ github.event.client_payload.tag }}"
          else
            echo "❌ Deployment failed for ${{ github.event.client_payload.repository }} release ${{ github.event.client_payload.tag }}"
          fi